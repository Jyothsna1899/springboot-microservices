---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: default
  labels:
    app: javaapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javaapp
  template:
    metadata:
      labels:
        app: javaapp
    spec:
      containers:
        - name: frontend
          image: jyothsna1899/frontend-img:latest
          ports:
            - containerPort: 8092

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: default
spec:
  type: NodePort
  selector:
    app: javaapp
  ports:
    - protocol: TCP
      port: 8092
      nodePort: 32000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-deployment
  namespace: default
  labels:
    app: javaapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javaapp
  template:
    metadata:
      labels:
        app: javaapp
    spec:
      containers:
        - name: app2
          image: jyothsna1899/app-2-img:latest
          ports:
            - containerPort: 8091

---
apiVersion: v1
kind: Service
metadata:
  name: app2-svc
  namespace: default
spec:
  type: NodePort
  selector:
    app: javaapp
  ports:
    - protocol: TCP
      port: 8091
      nodePort: 31000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mss-user-auth-deployment
  namespace: default
  labels:
    app: javaapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javaapp
  template:
    metadata:
      labels:
        app: javaapp
    spec:
      containers:
        - name: mss-user-auth
          image: jyothsna1899/mss-user-auth-img:latest
          ports:
            - containerPort: 8090

---
apiVersion: v1
kind: Service
metadata:
  name: mss-user-auth-svc
  namespace: default
spec:
  type: NodePort
  selector:
    app: javaapp
  ports:
    - protocol: TCP
      port: 8090
      nodePort: 30000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: default
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d/
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: ROOT_PASSWORD
            - name: MYSQL_DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: MYSQL_USER
            - name: MYSQL_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: MYSQL_PASSWORD
          args: ["--default-authentication-plugin=mysql_native_password"]
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: default
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: default
type: Opaque
data:
  ROOT_PASSWORD: cm9vdA==
  MYSQL_USER: dXNlcg==
  MYSQL_PASSWORD: cGFzc3dvcmQ=

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: local-pv
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: mysql
spec:
  storageClassName: local-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-pv
provisioner: openebs.io/local
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
